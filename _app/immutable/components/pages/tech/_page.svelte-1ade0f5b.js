import{S as Ie,i as Se,s as Ve,w as Te,a as m,k as r,q as x,x as ke,c as d,l as i,m as c,r as T,h as l,n as u,I as Be,p as pe,y as $e,b as _,G as e,B as He,f as we,t as De,z as Ee}from"../../../chunks/index-3c2523e5.js";import{T as Ge,F as Fe}from"../../../chunks/Footer-99416c22.js";function Ke(Re){let h,I,S,V,H,G,F,s,k,B,P,O,U,C,v,n,E,L,j,A,J,$,w,ue,N,Q,W,o,X,Y,Z,ee,te,re,ie,ae,le,se,ne,D,b,y,he,oe,R,me,de,fe,ce,K,g,M;return h=new Ge({props:{selected:"2"}}),g=new Fe({}),{c(){Te(h.$$.fragment),I=m(),S=r("br"),V=r("br"),H=r("br"),G=r("br"),F=m(),s=r("div"),k=r("div"),B=r("h1"),P=x("Technologies"),O=m(),U=r("hr"),C=m(),v=r("div"),n=r("div"),E=r("h3"),L=x("Trinkit Engine & Software Development Kit"),j=m(),A=r("hr"),J=m(),$=r("div"),w=r("img"),N=m(),Q=r("hr"),W=m(),o=r("p"),X=x(`Trinkit is a cross-platform rhythm & pixel art game engine used by Boxsubmus to create 2D games with the simplicity of GameMaker and the flexibility of Unity.\r
                `),Y=r("br"),Z=r("br"),ee=x(`\r
                Trinkit utilizes the lean on minimalism and simplicity of game development. Originally created for a fan-game, Trinkit is being developed primarily for use in rhythm and 2D retro games.\r
                `),te=r("br"),re=r("br"),ie=x(`\r
                Trinkit was made to be all-in-one. Featuring a sprite editor, code editor, and runtime.\r
                `),ae=r("br"),le=r("br"),se=x(`\r
                Stay tuned for more updates!`),ne=m(),D=r("div"),b=r("div"),y=r("img"),oe=m(),R=r("h5"),me=x("TrinkitSDK Example"),de=m(),fe=r("br"),ce=r("br"),K=m(),Te(g.$$.fragment),this.h()},l(t){ke(h.$$.fragment,t),I=d(t),S=i(t,"BR",{}),V=i(t,"BR",{}),H=i(t,"BR",{}),G=i(t,"BR",{}),F=d(t),s=i(t,"DIV",{class:!0});var a=c(s);k=i(a,"DIV",{class:!0});var ve=c(k);B=i(ve,"H1",{id:!0});var be=c(B);P=T(be,"Technologies"),be.forEach(l),ve.forEach(l),O=d(a),U=i(a,"HR",{}),C=d(a),v=i(a,"DIV",{class:!0});var q=c(v);n=i(q,"DIV",{class:!0});var p=c(n);E=i(p,"H3",{});var _e=c(E);L=T(_e,"Trinkit Engine & Software Development Kit"),_e.forEach(l),j=d(p),A=i(p,"HR",{}),J=d(p),$=i(p,"DIV",{class:!0});var ye=c($);w=i(ye,"IMG",{src:!0,style:!0}),ye.forEach(l),N=d(p),Q=i(p,"HR",{}),W=d(p),o=i(p,"P",{});var f=c(o);X=T(f,`Trinkit is a cross-platform rhythm & pixel art game engine used by Boxsubmus to create 2D games with the simplicity of GameMaker and the flexibility of Unity.\r
                `),Y=i(f,"BR",{}),Z=i(f,"BR",{}),ee=T(f,`\r
                Trinkit utilizes the lean on minimalism and simplicity of game development. Originally created for a fan-game, Trinkit is being developed primarily for use in rhythm and 2D retro games.\r
                `),te=i(f,"BR",{}),re=i(f,"BR",{}),ie=T(f,`\r
                Trinkit was made to be all-in-one. Featuring a sprite editor, code editor, and runtime.\r
                `),ae=i(f,"BR",{}),le=i(f,"BR",{}),se=T(f,`\r
                Stay tuned for more updates!`),f.forEach(l),p.forEach(l),ne=d(q),D=i(q,"DIV",{class:!0});var ge=c(D);b=i(ge,"DIV",{class:!0});var z=c(b);y=i(z,"IMG",{src:!0,style:!0}),oe=d(z),R=i(z,"H5",{});var xe=c(R);me=T(xe,"TrinkitSDK Example"),xe.forEach(l),z.forEach(l),ge.forEach(l),q.forEach(l),de=d(a),fe=i(a,"BR",{}),ce=i(a,"BR",{}),a.forEach(l),K=d(t),ke(g.$$.fragment,t),this.h()},h(){u(B,"id","typography"),u(k,"class","row"),Be(w.src,ue="tech/Trinkit_LogoBanner.png")||u(w,"src",ue),pe(w,"max-width","100%"),u($,"class","text-center"),u(n,"class","col"),Be(y.src,he="tech/Trinkit_Preview.png")||u(y,"src",he),pe(y,"width","100%"),pe(y,"max-width","528px"),u(b,"class","text-center"),u(D,"class","col"),u(v,"class","row"),u(s,"class","container")},m(t,a){$e(h,t,a),_(t,I,a),_(t,S,a),_(t,V,a),_(t,H,a),_(t,G,a),_(t,F,a),_(t,s,a),e(s,k),e(k,B),e(B,P),e(s,O),e(s,U),e(s,C),e(s,v),e(v,n),e(n,E),e(E,L),e(n,j),e(n,A),e(n,J),e(n,$),e($,w),e(n,N),e(n,Q),e(n,W),e(n,o),e(o,X),e(o,Y),e(o,Z),e(o,ee),e(o,te),e(o,re),e(o,ie),e(o,ae),e(o,le),e(o,se),e(v,ne),e(v,D),e(D,b),e(b,y),e(b,oe),e(b,R),e(R,me),e(s,de),e(s,fe),e(s,ce),_(t,K,a),$e(g,t,a),M=!0},p:He,i(t){M||(we(h.$$.fragment,t),we(g.$$.fragment,t),M=!0)},o(t){De(h.$$.fragment,t),De(g.$$.fragment,t),M=!1},d(t){Ee(h,t),t&&l(I),t&&l(S),t&&l(V),t&&l(H),t&&l(G),t&&l(F),t&&l(s),t&&l(K),Ee(g,t)}}}class ze extends Ie{constructor(h){super(),Se(this,h,null,Ke,Ve,{})}}export{ze as default};
